# 优化后的 Hugo 站点部署工作流
name: Deploy Hugo site to Pages

on:
  # 在默认分支（master）推送时触发
  push:
    branches:
      - master
  # 允许从 Actions 选项卡手动运行工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 并发控制：仅允许一个部署作业同时运行，跳过正在进行的作业和最新排队的作业之间的运行
concurrency:
  group: 'pages'
  cancel-in-progress: false

# 默认使用 bash 作为 shell
defaults:
  run:
    shell: bash

jobs:
  # 构建作业
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.139.0
    steps:
      - name: Checkout 代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: 安装 Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: 配置 Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: 安装 Node.js 依赖
        run: '[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true'

      - name: 使用 Hugo 构建
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: 上传构建产物为 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hugo-site
          path: ./public

  # 部署作业
  deploy:
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: hugo-site

      - name: 部署到 GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4